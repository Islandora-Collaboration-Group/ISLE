# $Id: fedoragsearch.properties $

#fedoragsearch.soapBase	  			= PROTOCOL://SOAPHOSTPORT/WEBAPPNAME/AXISSERVLETNAME #from web.xml
#fedoragsearch.soapBase	    		= http://localhost:8080/fedoragsearch/services
fedoragsearch.soapBase	    		= http://localhost:8080/fedoragsearch/services
fedoragsearch.soapUser				= fgsAdmin
fedoragsearch.soapPass				=
# add the fgsAdmin password above and remove comment

fedoragsearch.deployFile 			= /usr/local/tomcat/webapps/fedoragsearch/WEB-INF/classes/fgsconfigFinal/deploy.wsdd

# xsltProcessor, xalan or saxon
# this choice must be accompanied by the right namespace in your foxmlToLucene.xslt:
#     	xmlns:exts="xalan://dk.defxws.fedoragsearch.server.GenericOperationsImpl" for xalan
#   	xmlns:exts="java://dk.defxws.fedoragsearch.server.GenericOperationsImpl"  for saxon
fedoragsearch.xsltProcessor							= xalan

#rest
fedoragsearch.defaultNoXslt							= copyXml
fedoragsearch.defaultUpdateIndexRestXslt			= adminUpdateIndexToHtml
fedoragsearch.defaultGfindObjectsRestXslt			= adminGfindObjectsToHtml
fedoragsearch.defaultBrowseIndexRestXslt			= adminBrowseIndexToHtml
fedoragsearch.defaultGetRepositoryInfoRestXslt		= adminGetRepositoryInfoToHtml
fedoragsearch.defaultGetIndexInfoRestXslt			= adminGetIndexInfoToHtml

#resultPage
fedoragsearch.maxPageSize									= 50
fedoragsearch.defaultBrowseIndexTermPageSize				= 20
fedoragsearch.defaultGfindObjectsHitPageSize				= 10
#fedoragsearch.defaultGfindObjectsSnippetsMax				= 0 means no snippet generation
fedoragsearch.defaultGfindObjectsSnippetsMax				= 3
#fedoragsearch.defaultGfindObjectsFieldMaxLength			= 0 means no max length
fedoragsearch.defaultGfindObjectsFieldMaxLength				= 100

# writeLimit for Apache Tika
############################
# maximum number of characters to extract from a datastream for indexing
# characters after writeLimit are ignored
# prevents very long datastreams from stressing the server
fedoragsearch.writeLimit	= 100000         // default in Tika if not specified
#fedoragsearch.writeLimit	= -1             // no limit
# see https://tika.apache.org/1.0/api/org/apache/tika/sax/WriteOutContentHandler.html

#fedoragsearch.mimeTypes        = &lt;the sequence of mimeTypes used
#	                              when only one of the defined datastreams shall be indexed.
#			     				  E.g. demo:18 has three datastreams of different mimetype,
#			     				  but with supposedly identical text, so only one of them should be indexed.
#	                              Currently "text/plain text/xml text/html application/xml application/pdf" are implemented.
fedoragsearch.mimeTypes										= text/plain text/xml text/html application/xml application/pdf

#fedoragsearch.repositoryNames								= MyRep1 MyRepN configured in config/repository/MyRepI
fedoragsearch.repositoryNames								= FgsRepos

#fedoragsearch.indexNames									= MyIndex1 MyIndexN configured in config/index/MyIndexI
fedoragsearch.indexNames									= FgsIndex

# Configuration of updates through Fedora notifications. If this
# property is removed updates through notifications are disabled.
#
#fedoragsearch.updaterNames								= MyUpdaters1 MyUpdatersN configured in config/updater/MyUpdaters
fedoragsearch.updaterNames									= FgsUpdaters

#fedoragsearch.searchResultFilteringModule implements search result filtering, if present
#fedoragsearch.searchResultFilteringModule				= dk.defxws.fedoragsearch.server.SearchResultFilteringDemoImpl
# activate type of search result filtering
#fedoragsearch.searchResultFilteringType				= presearch
#fedoragsearch.searchResultFilteringType				= insearch
#fedoragsearch.searchResultFilteringType				= postsearch
# the active type may be changed dynamically either from command line or by url from browser:
# > sh runRESTClient.sh <HOST:PORT> configure configDemoSearchResultFiltering fedoragsearch.searchResultFilteringType postsearch
# url=<...>?operation=configure&configName=configDemoSearchResultFiltering&propertyName=fedoragsearch.searchResultFilteringType&propertyValue=<TYPE>
